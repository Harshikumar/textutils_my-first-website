{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","placeholder","onClick","handleSuccess","handleDanger","handleWarning","handleSecondary","handleInfo","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","repText","setRepText","_useState5","_useState6","repByText","setRepByText","style","myStyleMode","heading","value","onChange","event","target","rows","toLocaleUpperCase","showAlert","toLocaleLowerCase","newText","split","upText","finalText","index","length","lowText","n","invertText","charCodeAt","spaceText","console","log","reverseText","replaceAll","count","wordlength","defaultProps","backupMode","App","myStyle","color","backgroundColor","setAlert","setMode","myStyleSetMode","message","setTimeout","setbackupmode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ea44a935.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n         let lower=word.toLowerCase();\r\n         return(lower.charAt(0).toUpperCase() + lower.slice(1));\r\n\r\n    }\r\n  return (\r\n    props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)} : </strong>{props.alert.msg}\r\n</div>\r\n\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n           <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className={`btn btn-outline-${props.mode === \"dark\" ? \"light\" : \"dark\"} border-dark mx-2`} type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <p className=\"my-3 mx-2\">Themes : </p>\r\n            <button className=\"btn btn-success border-dark mx-1\" onClick={props.handleSuccess}></button>\r\n            <button className=\"btn btn-danger border-dark mx-1\" onClick={props.handleDanger}></button>\r\n            <button className=\"btn btn-warning border-dark mx-1\" onClick={props.handleWarning}></button>\r\n            <button className=\"btn btn-secondary border-dark mx-1\" onClick={props.handleSecondary}></button>\r\n            <button className=\"btn btn-info mx-1 border-dark\" onClick={props.handleInfo}></button>\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input mx-1\"\r\n                type=\"checkbox\"\r\n                onClick={props.toggleMode}\r\n                \r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  props.mode === \"dark\" ? \"light\" : \"dark\"\r\n                }`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set the title\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    setText(text.toLocaleUpperCase());\r\n    if(text===\"\")\r\n    {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else{\r\n    props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n    \r\n  };\r\n  const handleLowClick = () => {\r\n    setText(text.toLocaleLowerCase());\r\n    if(text===\"\")\r\n    {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else{\r\n    props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n  };\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    \r\n    props.showAlert(\"Textbox Cleared\",\"success\");\r\n  };\r\n  const handleCapitalClick = () => {\r\n    if (text === \"\") {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    } else {\r\n      props.showAlert(\"Starting Characters of all word are capitalized\",\"success\");\r\n      let newText = text.split(\" \");\r\n      let upText = \"\";\r\n      let finalText = \"\";\r\n      for (let index = 0; index < newText.length; index++) {\r\n        let lowText = \"\";\r\n        if(newText[index]===\"\"){continue;\r\n        }\r\n        else{\r\n        upText = newText[index][0].toUpperCase();\r\n        for (let n = 1; n < newText[index].length; n++) {\r\n          lowText = lowText + newText[index][n].toLowerCase();\r\n        }\r\n        if (index < newText.length - 1) {\r\n          finalText = finalText + upText + lowText + \" \";\r\n        } else {\r\n          finalText = finalText + upText + lowText;\r\n        }\r\n      }\r\n      setText(finalText);\r\n    }\r\n    }\r\n  };\r\n  const handleInvertClick = () => {\r\n    if (text === \"\") {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    } else {\r\n      let newText = text.split(\" \");\r\n      let finalText = \"\";\r\n      for (let index = 0; index < newText.length; index++) {\r\n        let invertText = \"\";\r\n        for (let n = 0; n < newText[index].length; n++) {\r\n          if (\r\n            newText[index].charCodeAt(n) > 64 &&\r\n            newText[index].charCodeAt(n) < 91\r\n          ) {\r\n            invertText = invertText + newText[index][n].toLowerCase();\r\n          } else if (\r\n            newText[index].charCodeAt(n) > 96 &&\r\n            newText[index].charCodeAt(n) < 123\r\n          ) {\r\n            invertText = invertText + newText[index][n].toUpperCase();\r\n          }\r\n        }\r\n        if (index < newText.length - 1) {\r\n          finalText = finalText + invertText + \" \";\r\n        } else {\r\n          finalText = finalText + invertText;\r\n        }\r\n      }\r\n      setText(finalText);\r\n      props.showAlert(\"Text Inverted\",\"success\");\r\n      \r\n    }\r\n  };\r\n  const handleRepalceText=(event)=>{\r\n    setRepText(event.target.value);\r\n  }\r\n  const handleReplaceBy=(event)=>{\r\n    setRepByText(event.target.value);\r\n  }\r\n  const handleReplaceClick=()=>{\r\n    setText(text.replaceAll(repText,repByText));\r\n    if(text===\"\")\r\n    {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else if(repText===\"\"){\r\n      props.showAlert(\"Text to be replaced is Empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else if(repByText===\"\"){\r\n      props.showAlert(\"Text to be replaced by is empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else{\r\n    props.showAlert(\"Text Replaced by newly entered text\",\"success\");\r\n    }\r\n    if(text===\"\" || repText===\"\" || repByText===\"\"){\r\n    }\r\n    else{\r\n    setRepText(\"\");\r\n    setRepByText(\"\");\r\n    }\r\n  }\r\n  const handleSpaceClick=()=>{\r\n    let newText=text.split(\" \");\r\n    let finalText=\"\";\r\n    for (let index = 0; index < newText.length; index++) {\r\n        let spaceText=\"\";\r\n        if(newText[index]===\"\"){\r\n            continue;\r\n        }\r\n        else{\r\n            for(let n=0;n<newText[index].length;n++){\r\n                spaceText=spaceText+newText[index][n];\r\n                console.log(spaceText)\r\n        }\r\n        if(index<newText.length-1){\r\n            finalText=finalText+spaceText+\" \";\r\n        }\r\n        else{\r\n            finalText=finalText+spaceText;\r\n        }\r\n        console.log(finalText)\r\n    }\r\n    }\r\n    setText(finalText);\r\n    if(text===\"\")\r\n    {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else{\r\n    props.showAlert(\"Extra spaced has been removed\",\"success\");\r\n    }\r\n  }\r\n  const handleReverseClick=()=>{\r\n    let newText=text.split(\" \");\r\n    let finalText=\"\";\r\n    for (let index = 0; index < newText.length; index++) {\r\n      let reverseText=\"\";\r\n        for (let n =newText[index].length;n>0;n--) {\r\n            reverseText=reverseText+newText[index][n-1];\r\n            console.log(reverseText)\r\n        }\r\n        if(index < newText.length-1){\r\n            finalText=finalText+reverseText+\" \";\r\n        }\r\n        else{\r\n            finalText=finalText+reverseText;\r\n        }\r\n    }\r\n    setText(finalText);\r\n    if(text===\"\")\r\n    {\r\n      props.showAlert(\"Textbox is Empty!!! Please type the Text\",\"warning\");\r\n    }\r\n    else{\r\n    props.showAlert(\"Entered text has been reversed\",\"success\");\r\n    }\r\n  }\r\n\r\n \r\n  const [text, setText] = useState(\"\");\r\n  const [repText,setRepText]=useState(\"\");\r\n  const [repByText,setRepByText]=useState(\"\");\r\n  const wordlength=()=>{\r\n  let count=0;\r\n  for (let index = 0; index < text.split(\" \").length; index++) {\r\n    if (text.split(\" \")[index]===\"\") {\r\n      continue;\r\n    }\r\n    else{\r\n      count=count+1;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\n  return (\r\n      <div className=\"container\" style={props.myStyleMode}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={props.myStyleMode}\r\n            \r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode}`} onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode} my-2 mx-3`} onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode}`} onClick={handleCapitalClick}>\r\n          Capitalize Word\r\n        </button>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode} mx-3`} onClick={handleInvertClick}>\r\n          Invert\r\n        </button>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode}`} onClick={handleSpaceClick}>Remove Extra Spaces</button>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode} mx-3`} onClick={handleReverseClick}>Reverse</button>\r\n        <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode}`} onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <div className=\"form-floating my-2\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"floatingTextarea\"\r\n            style={props.myStyleMode}\r\n            value={repText}\r\n            onChange={handleRepalceText}\r\n          ></textarea>\r\n          <label htmlFor=\"floatingTextarea\"><b>Text to be replaced</b></label>\r\n        </div>\r\n\r\n        <div className =\"form-floating my-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"floatingTextarea\"\r\n          style={props.myStyleMode}\r\n          // style={{width: '150px',myStyleSetMode}}\r\n          //style={...myStyleMode} {...width}{...'150px'}\r\n      value={repByText}\r\n      onChange={handleReplaceBy}\r\n      />\r\n      <label htmlFor=\"floatingTextarea\"><b>Replace by</b></label>\r\n    \r\n      <button className={`btn btn-${props.mode===\"light\"?\"primary\": props.mode} my-3`} onClick={handleReplaceClick}>Replace</button>\r\n    <div className=\"container my-4\" style={props.myStyleMode}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>          \r\n          {wordlength()} Words and {text.length} Characters{\" \"}\r\n          {(1 / 125) * (text.split(\" \").length - 1)} minutes to read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\n///import About from './Components/About';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React from 'react';\n\n\n/*import {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";*/\nlet backupMode=\"\";\nlet changeMode=\"\";\nfunction App() {\n  let myStyle={\n    color: \"black\",\n    backgroundColor: \"white\",\n   \n     }\n  \n  const[alert,setAlert]=useState(null);\n  const [mode,setMode]=useState(\"light\");\n  const[myStyleMode,myStyleSetMode]=useState(myStyle);\n  const showAlert=(message,type)=>{\n        setAlert({msg: message,\n        type: type});\n        setTimeout(() => {\n          setAlert(null);\n        }, 2000);\n  }\n  \n  const setbackupmode=()=>{\n    backupMode=mode;\n    console.log(backupMode)\n  \n  }\n  const handleSuccess=()=>{\n    if(changeMode!==\"success\" || \"danger\" || \"warning\" || \"secondary\" || \"info\"){\n      setbackupmode();\n    }\n    document.body.style.backgroundColor=\"#40a940\";\n    myStyle={\n      color: \"black\",\n      backgroundColor: \"#40a940\"\n       }\n      myStyleSetMode(myStyle);\n      setMode(\"success\")\n      showAlert(\"Green theme applied\",\"success\");\n      \n  }\n  \n\n  console.log(mode)\n  const handleDanger=()=>{\n    if(mode!==\"success\" || \"danger\" || \"warning\" || \"secondary\" || \"info\"){\n      setbackupmode();\n    }\n    document.body.style.backgroundColor=\"#df5f5f\";\n    myStyle={\n      color: \"black\",\n      backgroundColor: \"#df5f5f\"\n       }\n      myStyleSetMode(myStyle);\n      setMode(\"danger\")\n      showAlert(\"Red theme applied\",\"success\");\n    \n\n  }\n  const handleWarning=()=>{\n    if(mode!==\"success\" || \"danger\" || \"warning\" || \"secondary\" || \"info\"){\n      setbackupmode();\n    }\n    document.body.style.backgroundColor=\"#d38a1ee0\";\n    myStyle={\n      color: \"black\",\n      backgroundColor: \"#d38a1ee0\"\n       }\n      myStyleSetMode(myStyle);\n      setMode(\"warning\")\n      showAlert(\"Orange theme applied\",\"success\");\n    \n    \n  }\n  const handleSecondary=()=>{\n    if(mode!==\"success\" || \"danger\" || \"warning\" || \"secondary\" || \"info\"){\n      setbackupmode();\n    }\n    document.body.style.backgroundColor=\"#bbb3b3\";\n    myStyle={\n      color: \"black\",\n      backgroundColor: \"#bbb3b3\"\n       }\n      myStyleSetMode(myStyle);\n      setMode(\"secondary\")\n      showAlert(\"Grey theme applied\",\"success\");\n    \n    \n  }\n  const handleInfo=()=>{\n    if(mode!==\"success\" || \"danger\" || \"warning\" || \"secondary\" || \"info\"){\n      setbackupmode();\n    }\n    document.body.style.backgroundColor=\"#1a83ab\";\n    myStyle={\n      color: \"black\",\n      backgroundColor: \"#1a83ab\"\n       }\n      myStyleSetMode(myStyle);\n      setMode(\"info\")\n      showAlert(\"Blue theme applied\",\"success\");\n    \n    \n  }\n  const toggleMode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\");\n      myStyle={\n        color: \"white\",\n        backgroundColor: \"#071128\"\n         }\n        myStyleSetMode(myStyle);\n        document.body.style.backgroundColor=\"#071128\";\n        showAlert(\"Dark Mode Enabled\",\"success\");\n    }\n    else if(mode===\"dark\"){\n      setMode(\"light\");\n      myStyle={\n        color: \"black\",\n        backgroundColor: \"white\"\n         }\n         myStyleSetMode(myStyle);\n         document.body.style.backgroundColor=\"white\";\n         showAlert(\"Light Mode Enabled\",\"success\");\n    }\n  else if(mode===\"success\" || \"danger\" || \"warning\" || \"secondary\" || \"info\"){\n      if(backupMode===\"dark\"){\n        setMode(\"light\");\n        myStyle={\n          color: \"black\",\n          backgroundColor: \"white\"\n           }\n           myStyleSetMode(myStyle);\n           document.body.style.backgroundColor=\"white\";\n           showAlert(\"Light Mode Enabled\",\"success\");        \n      }\n      else if(backupMode===\"light\"){\n        setMode(\"dark\");\n        myStyle={\n          color: \"white\",\n          backgroundColor: \"#071128\"\n           }\n          myStyleSetMode(myStyle);\n          document.body.style.backgroundColor=\"#071128\";\n          showAlert(\"Dark Mode Enabled\",\"success\");\n      }\n      \n\n    }\n    \n  }\n \n\n  return (\n    <div style={myStyleMode}>\n      {/*<Router>*/}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} handleSuccess={handleSuccess} handleDanger={handleDanger} handleWarning={handleWarning} handleSecondary={handleSecondary} handleInfo={handleInfo} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/*<Routes>\n          <Route exact path=\"/about\" element={<About myStyleMode={myStyleMode}/>}>\n          </Route>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter the Text to Analyze\" mode={mode} myStyleMode={myStyleMode} showAlert={showAlert}/>}>\n          </Route>\n          \n  </Routes>*/}\n  <TextForm heading=\"Enter the Text to Analyze\" mode={mode} myStyleMode={myStyleMode} showAlert={showAlert}/>\n  </div>\n  {/*</Router>*/}\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}